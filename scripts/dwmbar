#!/bin/bash

# This script sets the statusbar with the xsetroot command at the end. Have it
# started by ~/.xinitrc or ~/.xprofile.

# Handle SIGTRAP signals sent by refbar to update the status bar immediately.
trap 'update' 5

# Set the deliminter character.
delim="|"

# testweather checks to see if the most recent forecast is up to date.  If it
# isn't, it downloads a new weather forecast, then signals to update the
# statusbar. Gets weather report from wttr.in.
testweather() { \
	[ "$(stat -c %y "$HOME/.local/share/weatherreport" 2>/dev/null | cut -d' ' -f1)" != "$(date '+%Y-%m-%d')" ] &&
		ping -q -c 1 1.1.1.1 >/dev/null &&
		curl -s "wttr.in/$location" > "$HOME/.local/share/weatherreport" &&
		notify-send "🌞 Weather" "New weather forecast for today." &&
		refbar
		}

# Here is the (big) function that outputs the appearance of the statusbar. It
# can really be broken down into many submodules which I've commented and
# explained.


status() { \

	currBright=`cat  /sys/class/backlight/radeon_bl0/brightness|tr -d "\n"`
	currBright=`echo "scale=0;100*$currBright/255"|bc -l`
	echo "| $currBright% B"
	echo "$delim"


	# Get the volume of ALSA's master volume output.  Show an icon if or
	# not muted.
	amixer get Master | grep -o "[0-9]*%\|\[on\]\|\[off\]" | head -2|sed "s/\[on\]//;s/\[off\]//"
	echo "$delim"


	# Wifi quality percentage and  icon if ethernet is connected.
	grep "^\s*w" /proc/net/wireless | awk '{ print "", int($3 * 100 / 70) "%" }'
	# grep "^\s*w" /proc/net/wireless | awk '{ print "" }'
	iwgetid|awk 'BEGIN{ FS="\""; }{print $2}'
	echo "$delim"
	if [ -d /sys/class/net/e*/operstate ] 
	then 
		sed "s/down//;s/up//" /sys/class/net/e*/operstate
		echo "$delim"
	fi


	# Will show all batteries with approximate icon for remaining power.
	charging=`acpi|awk 'BEGIN{ FS=" ";}{print $3}'`
	echo ${charging:0:1}
	for x in /sys/class/power_supply/BAT1/capacity;
	do
	case "$(cat $x)" in
		100|9[0-9])	echo "" ;;
		8[0-9]|7[0-9])	echo "" ;;
		6[0-9]|5[0-9])	echo "" ;;
		4[0-9]|3[0-9])	echo "" ;;
		*)		echo "" 
			;;
	esac
	done

	cat $x|tr -d "\n"
	echo "%"
	echo "$delim"
	# Date and time.
	date '+%Y %b %d (%a) %I:%M%p'
	}

update() { \
	# So all that big status function was just a command that quicking gets
	# what we want to be the statusbar. This xsetroot command is what sets
	# it. Note that the tr command replaces newlines with spaces. This is
	# to prevent some weird issues that cause significant slowing of
	# everything in dwm. Note entirely sure of the cause, but again, the tr
	# command easily avoids it.
	xsetroot -name "$(status | tr '\n' ' ')" &
    wait

	# Check to see if new weather report is needed.
#	testweather &
#    wait
    }


while :; do
    update
	# Sleep for a minute after changing the status bar before updating it
	# again. We run sleep in the background and use wait until it finishes,
    # because traps can interrupt wait immediately, but they can't do that
    # with sleep.
	sleep 1m &
    for x in /sys/class/power_supply/BAT1/capacity;
    do
    case "$(cat $x)" in
        [0-9]|1[0-5])   notify-send -u "critical" "Battery Percentage is $x%"
            ;;
    esac
    done    
    wait
done







	# Get current mpd track filename or artist - title if possible.
#	mpc -f "[[%artist% - ]%title%]|[%file%]" 2>/dev/null | grep -v "volume:" | head -n 1 && echo "$delim"




	# If the weather report is current, show daily precipitation chance,
	# low and high.  Don't even bother to understand this one unless you
	# have all day. Takes the weather report format from wttr.in and makes
	# it look like how I want it for the status bar.
#	[ "$(stat -c %y "$HOME/.local/share/weatherreport" 2>/dev/null | cut -d' ' -f1)" = "$(date '+%Y-%m-%d')" ] &&
#		sed '16q;d' "$HOME/.local/share/weatherreport" | grep -wo "[0-9]*%" | sort -n | sed -e '$!d' | sed -e "s/^/ /g" | tr -d '\n' &&
#		sed '13q;d' "$HOME/.local/share/weatherreport" | grep -o "m\\(-\\)*[0-9]\\+" | sort -n -t 'm' -k 2n | sed -e 1b -e '$!d' | tr '\n|m' ' ' | awk '{print " ",$1 "°","",$2 "°"}' &&
#		echo "$delim"



	# Show unread mail if mutt-wizard is installed.
#	command -v mw >/dev/null 2>&1 &&
#		echo "$delim" &&
#		du -a ~/.local/share/mail/*/INBOX/new/* 2>/dev/null | wc -l | sed 's/^/:/'
#		echo "$delim"
